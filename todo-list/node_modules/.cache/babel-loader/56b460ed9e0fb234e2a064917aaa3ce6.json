{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nexport const taskAdapter = createEntityAdapter();\nexport const taskSelector = taskAdapter.getSelectors(state => state.tasks);\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: taskAdapter.getInitialState(),\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask);\n    },\n    toggleCheck: (state, action) => {\n      const index = state.findIndex(task => task.id === action.payload.id);\n      state[index].done = action.payload.done;\n    }\n  },\n  deleteTask: (state, action) => {\n    return state.filter(task => task.id !== action.payload.id);\n  },\n  editTask: (state, action) => {\n    return state.task.name[action.payload.name];\n  }\n});\nexport const {\n  saveTask,\n  toggleCheck,\n  deleteTask,\n  editTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","createEntityAdapter","taskAdapter","taskSelector","getSelectors","state","tasks","tasksSlice","name","initialState","getInitialState","reducers","saveTask","action","newTask","id","Date","now","payload","done","push","toggleCheck","index","findIndex","task","deleteTask","filter","editTask","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,mBAAtB,QAAiD,kBAAjD;AAEA,OAAO,MAAMC,WAAW,GAAGD,mBAAmB,EAAvC;AACP,OAAO,MAAME,YAAY,GAAGD,WAAW,CAACE,YAAZ,CAA0BC,KAAD,IAAWA,KAAK,CAACC,KAA1C,CAArB;AAEP,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAEP,WAAW,CAACQ,eAAZ,EAFe;AAI7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACP,KAAD,EAAQQ,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdT,QAAAA,IAAI,EAAEK,MAAM,CAACK,OAAP,CAAeV,IAFP;AAGdW,QAAAA,IAAI,EAAE;AAHQ,OAAhB;AAKAd,MAAAA,KAAK,CAACe,IAAN,CAAWN,OAAX;AACD,KARO;AAURO,IAAAA,WAAW,EAAE,CAAChB,KAAD,EAAQQ,MAAR,KAAmB;AAC9B,YAAMS,KAAK,GAAGjB,KAAK,CAACkB,SAAN,CACXC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYF,MAAM,CAACK,OAAP,CAAeH,EADzB,CAAd;AAGAV,MAAAA,KAAK,CAACiB,KAAD,CAAL,CAAaH,IAAb,GAAoBN,MAAM,CAACK,OAAP,CAAeC,IAAnC;AACD;AAfO,GAJmB;AAqB7BM,EAAAA,UAAU,EAAE,CAACpB,KAAD,EAAQQ,MAAR,KAAmB;AAC5B,WAAOR,KAAK,CAACqB,MAAN,CACJF,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYF,MAAM,CAACK,OAAP,CAAeH,EADhC,CAAP;AAEF,GAxB4B;AAyB7BY,EAAAA,QAAQ,EAAE,CAACtB,KAAD,EAAQQ,MAAR,KAAmB;AAC5B,WAAOR,KAAK,CAACmB,IAAN,CAAWhB,IAAX,CAAgBK,MAAM,CAACK,OAAP,CAAeV,IAA/B,CAAP;AACA;AA3B4B,CAAD,CAA9B;AA8BA,OAAO,MAAM;AAAEI,EAAAA,QAAF;AAAYS,EAAAA,WAAZ;AAAyBI,EAAAA,UAAzB;AAAqCE,EAAAA;AAArC,IAAkDpB,UAAU,CAACqB,OAAnE;AACP,eAAerB,UAAU,CAACsB,OAA1B","sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit'\n\nexport const taskAdapter = createEntityAdapter();\nexport const taskSelector = taskAdapter.getSelectors((state) => state.tasks)\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: taskAdapter.getInitialState(),\n\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask)\n    },\n\n    toggleCheck: (state, action) => {\n      const index = state.findIndex(\n        (task) => task.id === action.payload.id\n      );\n      state[index].done = action.payload.done;\n    }\n  },\n  deleteTask: (state, action) => {\n     return state.filter(\n       (task) => task.id !== action.payload.id);\n  },\n  editTask: (state, action) => {\n   return state.task.name[action.payload.name]\n  }\n});\n\nexport const { saveTask, toggleCheck, deleteTask, editTask } = tasksSlice.actions;\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}