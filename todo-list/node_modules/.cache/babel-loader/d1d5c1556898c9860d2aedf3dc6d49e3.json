{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nexport const todoAdapter = createEntityAdapter();\nexport const todoSelector = todoAdapter.getSelectors(state => state.tasks);\nconst tasksSlice = createSlice({\n  name: 'todos',\n  initialState: tosoAdapter.getInitialState(),\n  reducers: {\n    addTodo: todoAdapter.addOne,\n    addTodos: todoAdapter.addMany //   toggleCheck: (state, action) => {\n    //     const index = state.findIndex(\n    //       (task) => task.id === action.payload.id\n    //     );\n    //     state[index].done = action.payload.done;\n    //   }\n    // },\n    // deleteTask: (state, action) => {\n    //    return state.filter(\n    //      (task) => task.id !== action.payload.id);\n    // },\n    // editTask: (state, action) => {\n    //  return state.task.name[action.payload.name]\n\n  }\n});\nexport const {\n  addTodo,\n  saveTasks,\n  toggleCheck,\n  deleteTask,\n  editTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/todoSlice.js"],"names":["createSlice","createEntityAdapter","todoAdapter","todoSelector","getSelectors","state","tasks","tasksSlice","name","initialState","tosoAdapter","getInitialState","reducers","addTodo","addOne","addTodos","addMany","saveTasks","toggleCheck","deleteTask","editTask","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,mBAAtB,QAAiD,kBAAjD;AAEA,OAAO,MAAMC,WAAW,GAAGD,mBAAmB,EAAvC;AACP,OAAO,MAAME,YAAY,GAAGD,WAAW,CAACE,YAAZ,CAA0BC,KAAD,IAAWA,KAAK,CAACC,KAA1C,CAArB;AAEP,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAEC,WAAW,CAACC,eAAZ,EAFe;AAI7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEX,WAAW,CAACY,MADb;AAERC,IAAAA,QAAQ,EAAEb,WAAW,CAACc,OAFd,CAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfU;AAJmB,CAAD,CAA9B;AAuBA,OAAO,MAAM;AAAEH,EAAAA,OAAF;AAAWI,EAAAA,SAAX;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA;AAA/C,IAA4Db,UAAU,CAACc,OAA7E;AACP,eAAed,UAAU,CAACe,OAA1B","sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit'\n\nexport const todoAdapter = createEntityAdapter();\nexport const todoSelector = todoAdapter.getSelectors((state) => state.tasks)\n\nconst tasksSlice = createSlice({\n  name: 'todos',\n  initialState: tosoAdapter.getInitialState(),\n\n  reducers: {\n    addTodo: todoAdapter.addOne,\n    addTodos: todoAdapter.addMany,\n  //   toggleCheck: (state, action) => {\n  //     const index = state.findIndex(\n  //       (task) => task.id === action.payload.id\n  //     );\n  //     state[index].done = action.payload.done;\n  //   }\n  // },\n  // deleteTask: (state, action) => {\n  //    return state.filter(\n  //      (task) => task.id !== action.payload.id);\n  // },\n  // editTask: (state, action) => {\n  //  return state.task.name[action.payload.name]\n  }\n});\n\nexport const { addTodo, saveTasks, toggleCheck, deleteTask, editTask } = tasksSlice.actions;\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}