{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todoList: [{\n    id: 1,\n    name: \"task1\",\n    done: false\n  }, {\n    id: 2,\n    name: \"task2\",\n    done: false\n  }, {\n    id: 3,\n    name: \"task3\",\n    done: true\n  }]\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.todoList.push(newTask);\n    },\n    setCheck: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      state[index].done = action.payload.done;\n    }\n  }\n});\nexport const {\n  saveTask,\n  setCheck\n} = tasksSlice.actions;\nexport const selectTaskList = state => state.tasks.todoList;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","initialState","todoList","id","name","done","tasksSlice","reducers","saveTask","state","action","newTask","Date","now","payload","push","setCheck","index","findIndex","todo","actions","selectTaskList","tasks","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GADQ,EAER;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAFQ,EAGR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAHQ;AADS,CAArB;AAQA,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,OADuB;AAE7BH,EAAAA,YAF6B;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAG;AACdR,QAAAA,EAAE,EAAES,IAAI,CAACC,GAAL,EADU;AAEdT,QAAAA,IAAI,EAAEM,MAAM,CAACI,OAAP,CAAeV,IAFP;AAGdC,QAAAA,IAAI,EAAE;AAHQ,OAAhB;AAMAI,MAAAA,KAAK,CAACP,QAAN,CAAea,IAAf,CAAoBJ,OAApB;AACD,KATO;AAWRK,IAAAA,QAAQ,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMO,KAAK,GAAGR,KAAK,CAACS,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAAChB,EAAL,KAAYO,MAAM,CAACI,OAAP,CAAeX,EAArD,CAAd;AACAM,MAAAA,KAAK,CAACQ,KAAD,CAAL,CAAaZ,IAAb,GAAoBK,MAAM,CAACI,OAAP,CAAeT,IAAnC;AACD;AAdO;AAHmB,CAAD,CAA9B;AAqBA,OAAO,MAAM;AAAEG,EAAAA,QAAF;AAAYQ,EAAAA;AAAZ,IAAyBV,UAAU,CAACc,OAA1C;AACP,OAAO,MAAMC,cAAc,GAAGZ,KAAK,IAAIA,KAAK,CAACa,KAAN,CAAYpB,QAA5C;AACP,eAAeI,UAAU,CAACiB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  todoList: [\n    { id: 1, name: \"task1\", done: false },\n    { id: 2, name: \"task2\", done: false },\n    { id: 3, name: \"task3\", done: true },\n  ]\n}\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n\n      };\n      state.todoList.push(newTask)\n    },\n\n    setCheck: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].done = action.payload.done;\n    }\n  },\n});\n\nexport const { saveTask, setCheck } = tasksSlice.actions\nexport const selectTaskList = state => state.tasks.todoList\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}