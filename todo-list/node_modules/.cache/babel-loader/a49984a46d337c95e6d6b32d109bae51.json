{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todoList: []\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.todoList.push(newTask);\n    },\n    setCheck: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      state(index).completed = action.payload.completed;\n    }\n  }\n});\nexport const {\n  saveTask,\n  setCheck\n} = tasksSlice.actions;\nexport const selectTaskList = state => state.tasks.todoList;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","initialState","todoList","tasksSlice","name","reducers","saveTask","state","action","newTask","id","Date","now","payload","done","push","setCheck","index","findIndex","todo","completed","actions","selectTaskList","tasks","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,OADuB;AAE7BH,EAAAA,YAF6B;AAG7BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdR,QAAAA,IAAI,EAAEI,MAAM,CAACK,OAAP,CAAeT,IAFP;AAGdU,QAAAA,IAAI,EAAE;AAHQ,OAAhB;AAMAP,MAAAA,KAAK,CAACL,QAAN,CAAea,IAAf,CAAoBN,OAApB;AACD,KATO;AAWRO,IAAAA,QAAQ,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMS,KAAK,GAAGV,KAAK,CAACW,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYF,MAAM,CAACK,OAAP,CAAeH,EAArD,CAAd;AACAH,MAAAA,KAAK,CAACU,KAAD,CAAL,CAAaG,SAAb,GAAyBZ,MAAM,CAACK,OAAP,CAAeO,SAAxC;AACH;AAdS;AAHmB,CAAD,CAA9B;AAqBA,OAAO,MAAM;AAAEd,EAAAA,QAAF;AAAYU,EAAAA;AAAZ,IAAyBb,UAAU,CAACkB,OAA1C;AACP,OAAO,MAAMC,cAAc,GAAGf,KAAK,IAAIA,KAAK,CAACgB,KAAN,CAAYrB,QAA5C;AACP,eAAeC,UAAU,CAACqB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  todoList: []\n}\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n\n      };\n      state.todoList.push(newTask)\n    },\n\n    setCheck: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state(index).completed = action.payload.completed\n  }\n},\n});\n\nexport const { saveTask, setCheck } = tasksSlice.actions\nexport const selectTaskList = state => state.tasks.todoList\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}