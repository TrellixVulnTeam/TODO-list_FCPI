{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/Atoms/InputTask.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveTodo } from '../../features/todoSlice';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  btn: {\n    fontSize: \"2em\",\n    background: \"transparent\",\n    '&:hover': {\n      background: \"transparent\",\n      boxShadow: \"7px 2px 2px black\"\n    }\n  }\n});\n\nconst InputTask = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [input, setInput] = useState(\"\");\n\n  const addTodo = () => {\n    dispatch(saveTodo({\n      item: input,\n      done: false,\n      id: Date.now()\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.btn,\n      onClick: addTodo,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputTask, \"3wqKHivVWj1qt6S7DmyQxLgnvxI=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = InputTask;\nexport default InputTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTask\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/Atoms/InputTask.js"],"names":["Box","Button","Input","React","useState","useDispatch","saveTodo","makeStyles","useStyles","btn","fontSize","background","boxShadow","InputTask","classes","dispatch","input","setInput","addTodo","item","done","id","Date","now","e","target","value"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC7BE,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,UAAU,EAAE,aAFT;AAGH,eAAY;AACVA,MAAAA,UAAU,EAAE,aADF;AAEVC,MAAAA,SAAS,EAAE;AAFD;AAHT;AADwB,CAAD,CAA5B;;AAUA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMc,OAAO,GAAG,MAAM;AACpBH,IAAAA,QAAQ,CAACT,QAAQ,CAAC;AAChBa,MAAAA,IAAI,EAAEH,KADU;AAEhBI,MAAAA,IAAI,EAAE,KAFU;AAGhBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHY,KAAD,CAAT,CAAR;AAKD,GAND;;AAOA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,KAAd;AAAqB,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEZ,OAAO,CAACL,GAA3B;AAAgC,MAAA,OAAO,EAAES,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjBD;;GAAML,S;UACYL,S,EACCH,W;;;KAFbQ,S;AAmBN,eAAeA,SAAf","sourcesContent":["import { Box, Button, Input } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { saveTodo } from '../../features/todoSlice'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\nbtn: {\n  fontSize: \"2em\",\n  background: \"transparent\",\n  '&:hover' : {\n    background: \"transparent\",\n    boxShadow: \"7px 2px 2px black\",\n  }\n}\n})\nconst InputTask = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [input, setInput] = useState(\"\");\n  const addTodo = () => {\n    dispatch(saveTodo({\n      item: input,\n      done: false,\n      id: Date.now()\n    }))\n  }\n  return (\n    <Box className=\"input\">\n      <Input value={input} onChange={(e) => setInput(e.target.value)} />\n      <Button className={classes.btn} onClick={addTodo}>+</Button>\n    </Box>\n  )\n}\n\nexport default InputTask\n"]},"metadata":{},"sourceType":"module"}