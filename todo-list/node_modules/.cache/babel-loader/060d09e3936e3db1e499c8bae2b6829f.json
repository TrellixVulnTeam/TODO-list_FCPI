{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: [{\n    id: 1,\n    name: \"task1\",\n    done: false\n  }, {\n    id: 2,\n    name: \"task2\",\n    done: false\n  }, {\n    id: 3,\n    name: \"task3\",\n    done: true\n  }],\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask);\n    },\n    toggleCheck: (state, action) => {\n      const index = state.findIndex(task => task.id === action.payload.id);\n      state[index].done = action.payload.done;\n    }\n  },\n  deleteTask: (state, action) => {\n    state.filter((task, id) => task.id !== action.payload);\n  }\n});\nexport const {\n  saveTask,\n  toggleCheck,\n  deleteTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","tasksSlice","name","initialState","id","done","reducers","saveTask","state","action","newTask","Date","now","payload","push","toggleCheck","index","findIndex","task","deleteTask","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,UAAU,GAAGD,WAAW,CAAC;AAC7BE,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAC,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GADW,EAEX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GAFW,EAGX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GAHW,CAFgB;AAO7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAG;AACdN,QAAAA,EAAE,EAAEO,IAAI,CAACC,GAAL,EADU;AAEdV,QAAAA,IAAI,EAAEO,MAAM,CAACI,OAAP,CAAeX,IAFP;AAGdG,QAAAA,IAAI,EAAE;AAHQ,OAAhB;AAKAG,MAAAA,KAAK,CAACM,IAAN,CAAWJ,OAAX;AACD,KARO;AAURK,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMO,KAAK,GAAGR,KAAK,CAACS,SAAN,CACXC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYK,MAAM,CAACI,OAAP,CAAeT,EADzB,CAAd;AAGAI,MAAAA,KAAK,CAACQ,KAAD,CAAL,CAAaX,IAAb,GAAoBI,MAAM,CAACI,OAAP,CAAeR,IAAnC;AACD;AAfO,GAPmB;AAwB7Bc,EAAAA,UAAU,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,IAAAA,KAAK,CAACY,MAAN,CAAa,CAACF,IAAD,EAAOd,EAAP,KAAcc,IAAI,CAACd,EAAL,KAAYK,MAAM,CAACI,OAA9C;AACF;AA1B4B,CAAD,CAA9B;AA6BA,OAAO,MAAM;AAAEN,EAAAA,QAAF;AAAYQ,EAAAA,WAAZ;AAAyBI,EAAAA;AAAzB,IAAwClB,UAAU,CAACoB,OAAzD;AACP,eAAepB,UAAU,CAACqB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState:[\n    { id: 1, name: \"task1\", done: false },\n    { id: 2, name: \"task2\", done: false },\n    { id: 3, name: \"task3\", done: true },\n  ],\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask)\n    },\n\n    toggleCheck: (state, action) => {\n      const index = state.findIndex(\n        (task) => task.id === action.payload.id\n      );\n      state[index].done = action.payload.done;\n    }\n  },\n  deleteTask: (state, action) => {\n     state.filter((task, id) => task.id !== action.payload);\n  }\n});\n\nexport const { saveTask, toggleCheck, deleteTask } = tasksSlice.actions;\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}