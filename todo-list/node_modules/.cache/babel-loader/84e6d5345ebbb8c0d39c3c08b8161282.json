{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/Atoms/Todos.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos, removeTodos } from '../../features/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj)),\n    removeTodo: id => dispatch(removeTodos(id))\n  };\n};\n\nconst Todos = props => {\n  _s();\n\n  const [todo, setTodo] = useState('');\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current;\n  };\n\n  const handleChange = e => {\n    setTodo(e.target.value);\n  };\n\n  console.log(\"todo text\", todo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => props.addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        done: false\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todos.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            disabled: inputRef,\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.updateTodo(item.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.removeTodo(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \" \"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todos, \"1VEI6wWJLYoMQdhg/hYrtwOK2i0=\");\n\n_c = Todos;\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/Atoms/Todos.js"],"names":["Button","Input","React","useState","useRef","connect","addTodos","removeTodos","mapStateToProps","state","todos","mapDispatchToProps","dispatch","addTodo","obj","removeTodo","id","Todos","props","todo","setTodo","inputRef","changeFocus","current","disabled","handleChange","e","target","value","console","log","Math","floor","random","item","done","map","updateTodo"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,wBAAtC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED;AADF,GAAP;AAGD,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAGC,GAAD,IAASF,QAAQ,CAACN,QAAQ,CAACQ,GAAD,CAAT,CADrB;AAELC,IAAAA,UAAU,EAAGC,EAAD,IAAQJ,QAAQ,CAACL,WAAW,CAACS,EAAD,CAAZ;AAFvB,GAAP;AAKD,CAND;;AAOA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMkB,QAAQ,GAAGjB,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMkB,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,QAAjB,GAA4B,KAA5B;AACAH,IAAAA,QAAQ,CAACE,OAAT;AACD,GAHD;;AAIA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,IAAzB;AACA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMR,KAAK,CAACL,OAAN,CAAc;AAAEG,QAAAA,EAAE,EAAEe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAN;AAAwCC,QAAAA,IAAI,EAAEf,IAA9C;AAAoDgB,QAAAA,IAAI,EAAE;AAA1D,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGjB,KAAK,CAACR,KAAN,CAAY0B,GAAZ,CAAgBF,IAAI,IAAI;AACvB,4BACE;AAAA,kCACE;AAAU,YAAA,GAAG,EAAEb,QAAf;AAAyB,YAAA,QAAQ,EAAEA,QAAnC;AAAA,sBAA8Ca,IAAI,CAACA;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,MAAMhB,KAAK,CAACmB,UAAN,CAAiBH,IAAI,CAAClB,EAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE,MAAME,KAAK,CAACH,UAAN,CAAiBmB,IAAI,CAAClB,EAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAGoE,GAHpE;AAAA,WAASkB,IAAI,CAAClB,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BD;;GAAMC,K;;KAAAA,K;AA8BN,eAAeZ,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,KAA7C,CAAf","sourcesContent":["import { Button, Input } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useRef } from 'react';\nimport { connect } from 'react-redux'\nimport { addTodos, removeTodos } from '../../features/reducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (obj) => dispatch(addTodos(obj)),\n    removeTodo: (id) => dispatch(removeTodos(id)),\n\n  }\n}\nconst Todos = (props) => {\n  const [todo, setTodo] = useState('');\n  const inputRef = useRef(true);\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current\n  }\n  const handleChange = (e) => {\n    setTodo(e.target.value)\n  }\n  console.log(\"todo text\", todo)\n  return (\n    <div>\n      <Input onChange={(e) => handleChange(e)} />\n      <Button onClick={() => props.addTodo({ id: Math.floor(Math.random() * 1000), item: todo, done: false })}>+</Button>\n      <ul>\n        {props.todos.map(item => {\n          return (\n            <li key={item.id}>\n              <textarea ref={inputRef} disabled={inputRef}>{item.item}</textarea>\n              <button onClick={() => props.updateTodo(item.id)}>Edit</button>\n              <button onClick={() => props.removeTodo(item.id)}>Delete</button>{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n"]},"metadata":{},"sourceType":"module"}