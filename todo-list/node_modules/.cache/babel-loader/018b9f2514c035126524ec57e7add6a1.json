{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return { ...todo,\n            item: action.payload.item\n          };\n        }\n\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/reducer.js"],"names":["createSlice","initialState","addTodoReducer","name","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,OAD2B;AAEjCF,EAAAA,YAFiC;AAGjCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAP;AACD,KAJO;AAKRI,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAxC,CAAP;AACD,KAPO;AAQRK,IAAAA,WAAW,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACS,GAAN,CAAWC,IAAI,IAAI;AACxB,YAAGA,IAAI,CAACH,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA9B,EAAkC;AAChC,iBAAO,EACL,GAAGG,IADE;AAELJ,YAAAA,IAAI,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAFhB,WAAP;AAID;;AACD,eAAOI,IAAP;AACD,OARM,CAAP;AASD;AAlBO;AAHuB,CAAD,CAAlC;AAyBA,OAAO,MAAM;AAAEX,EAAAA,QAAF;AAAYK,EAAAA,WAAZ;AAAyBI,EAAAA;AAAzB,IAAyCZ,cAAc,CAACe,OAA9D;AACP,OAAO,MAAMC,OAAO,GAAGhB,cAAc,CAACgB,OAA/B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map( todo => {\n        if(todo.id === action.payload.id) {\n          return {\n            ...todo,\n            item: action.payload.item,\n          }\n        }\n        return todo;\n      });\n    }\n  }\n});\n\nexport const { addTodos, removeTodos, updateTodos } = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;"]},"metadata":{},"sourceType":"module"}