{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/Atoms/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Input } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { addTodo, AddTodo } from '../../features/todoSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveTodo = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n\n  const submit = () => {\n    if (value.length > 0) {\n      dispatch(addTodo({\n        id: nanoid(),\n        todo: text,\n        done: false\n      }));\n      const items = value.split(\",\");\n      dispatch(addTodos(items.map(item => ({\n        id: nanoid(),\n        text: item,\n        done: false\n      }))));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submit,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SaveTodo, \"r9r78xgnLdvyT5jgPbF3qGUb+sU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SaveTodo;\nexport default SaveTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveTodo\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/Atoms/AddTodo.js"],"names":["React","useState","Button","Input","useDispatch","addTodo","AddTodo","nanoid","SaveTodo","dispatch","text","setText","submit","value","length","id","todo","done","items","split","addTodos","map","item","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,0BAAjC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,MAAM,GAAG,MAAM;AACnB,QAAIC,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpBL,MAAAA,QAAQ,CAACJ,OAAO,CAAC;AACfU,QAAAA,EAAE,EAAER,MAAM,EADK;AAEfS,QAAAA,IAAI,EAAEN,IAFS;AAGfO,QAAAA,IAAI,EAAE;AAHS,OAAD,CAAR,CAAR;AAKA,YAAMC,KAAK,GAAGL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAd;AAEAV,MAAAA,QAAQ,CACNW,QAAQ,CACRF,KAAK,CAACG,GAAN,CAAWC,IAAD,KAAW;AAACP,QAAAA,EAAE,EAACR,MAAM,EAAV;AAAcG,QAAAA,IAAI,EAAEY,IAApB;AAA0BL,QAAAA,IAAI,EAAE;AAAhC,OAAX,CAAV,CADQ,CADF,CAAR;AAID;AACF,GAdD;;AAeI,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEP,IAFT;AAGE,MAAA,QAAQ,EAAEa,CAAC,IAAIZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASX,KAAV;AAHxB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BL;;GAAMJ,Q;UACaJ,W;;;KADbI,Q;AA8BF,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Input } from '@material-ui/core'\nimport { useDispatch } from 'react-redux';\nimport { addTodo, AddTodo } from '../../features/todoSlice';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst SaveTodo = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n\n  const submit = () => {\n    if (value.length > 0) {\n      dispatch(addTodo({\n        id: nanoid(),\n        todo: text,\n        done: false,\n      }));\n      const items = value.split(\",\");\n\n      dispatch(\n        addTodos(\n        items.map((item) => ({id:nanoid(), text: item, done: false}))\n      ))\n    }\n  }\n      return (\n        <div>\n          <Input\n            type=\"text\"\n            value={text}\n            onChange={e => setText(e.target.value)} />\n          <Button onClick={submit}>+</Button>\n        </div>\n      )\n    }\n\n    export default SaveTodo\n"]},"metadata":{},"sourceType":"module"}