{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todoList: []\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    setCheck: (state, action) => {\n      state.todoList.map(item => {\n        if (action.payload === item.id && item.done === true) {\n          item.done = false;\n        } else if (action.payload === item.id && item.done === true) {\n          item.done = true;\n        }\n      });\n    }\n  }\n});\nexport const {\n  saveTask,\n  setCheck\n} = tasksSlice.actions;\nexport const selectTaskList = state => state.tasks.todoList;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","initialState","todoList","tasksSlice","name","reducers","saveTask","state","action","push","payload","setCheck","map","item","id","done","actions","selectTaskList","tasks","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,OADuB;AAE7BH,EAAAA,YAF6B;AAG7BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACD,KAHO;AAKRC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeU,GAAf,CAAmBC,IAAI,IAAI;AACzB,YAAIL,MAAM,CAACE,OAAP,KAAmBG,IAAI,CAACC,EAAxB,IAA8BD,IAAI,CAACE,IAAL,KAAc,IAAhD,EAAsD;AAClDF,UAAAA,IAAI,CAACE,IAAL,GAAY,KAAZ;AACH,SAFD,MAEO,IAAIP,MAAM,CAACE,OAAP,KAAmBG,IAAI,CAACC,EAAxB,IAA8BD,IAAI,CAACE,IAAL,KAAc,IAAhD,EAAsD;AACzDF,UAAAA,IAAI,CAACE,IAAL,GAAY,IAAZ;AACH;AACF,OAND;AAOD;AAbO;AAHmB,CAAD,CAA9B;AAoBA,OAAO,MAAM;AAAET,EAAAA,QAAF;AAAYK,EAAAA;AAAZ,IAAyBR,UAAU,CAACa,OAA1C;AACP,OAAO,MAAMC,cAAc,GAAGV,KAAK,IAAIA,KAAK,CAACW,KAAN,CAAYhB,QAA5C;AACP,eAAeC,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  todoList: []\n}\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    saveTask: (state, action) => {\n      state.todoList.push(action.payload)\n    },\n\n    setCheck: (state, action) => {\n      state.todoList.map(item => {\n        if (action.payload === item.id && item.done === true) {\n            item.done = false\n        } else if (action.payload === item.id && item.done === true) {\n            item.done = true\n        }\n      })\n    }\n  }\n});\n\nexport const { saveTask, setCheck } = tasksSlice.actions\nexport const selectTaskList = state => state.tasks.todoList\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}