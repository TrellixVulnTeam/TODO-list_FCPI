{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/pages/TODOlistScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { styles } from './WelcomeScreen';\nimport InputTask from '../Atoms/InputTask';\nimport TodoItem from '../Atoms/TodoItem';\nimport { useSelector } from 'react-redux';\nimport { selectTodoList } from '../../features/todoSlice';\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '../../assets/paper-texture.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    backgroundImage: `url(${Paper})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    flex: \"1\"\n  }\n});\n\nconst TODOlistScreen = () => {\n  _s();\n\n  const classes = useStyles();\n  const todoList = useSelector(selectTodoList);\n  const state = useSelector(state => state);\n  const {\n    id\n  } = useParams();\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"700px\",\n        width: \"500px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n        padding: \"20px\"\n      },\n      className: \"list__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(InputTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), todoList.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n          activeId: id,\n          name: item.item,\n          done: item.done,\n          id: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TODOlistScreen, \"8BmnPziSvWIZ4c1jXnq6e4AnzsY=\", false, function () {\n  return [useStyles, useSelector, useSelector, useParams];\n});\n\n_c = TODOlistScreen;\nexport default TODOlistScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TODOlistScreen\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/pages/TODOlistScreen.js"],"names":["React","styles","InputTask","TodoItem","useSelector","selectTodoList","useParams","makeStyles","Paper","useStyles","container","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","display","flexDirection","alignItems","width","flex","TODOlistScreen","classes","todoList","state","id","console","log","height","backgroundColor","padding","map","item","done"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAG,OAAMH,KAAM,GADrB;AAETI,IAAAA,kBAAkB,EAAE,QAFX;AAGTC,IAAAA,cAAc,EAAE,SAHP;AAITC,IAAAA,gBAAgB,EAAE,WAJT;AAKTC,IAAAA,OAAO,EAAE,MALA;AAMTC,IAAAA,aAAa,EAAE,QANN;AAOTC,IAAAA,UAAU,EAAE,QAPH;AAQTC,IAAAA,KAAK,EAAE,MARE;AASTC,IAAAA,IAAI,EAAE;AATG;AADgB,CAAD,CAA5B;;AAcA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGlB,WAAW,CAACC,cAAD,CAA5B;AACA,QAAMkB,KAAK,GAAGnB,WAAW,CAACmB,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASlB,SAAS,EAAxB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEtB,MAAZ;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAE0B,QAAAA,MAAM,EAAE,OAAV;AAAmBT,QAAAA,KAAK,EAAE,OAA1B;AAAmCH,QAAAA,OAAO,EAAE,MAA5C;AAAoDC,QAAAA,aAAa,EAAE,QAAnE;AAA6EC,QAAAA,UAAU,EAAE,QAAzF;AAAmGW,QAAAA,eAAe,EAAE,OAApH;AAA6HC,QAAAA,OAAO,EAAE;AAAtI,OAAZ;AAA4J,MAAA,SAAS,EAAC,iBAAtK;AAAA,6BACE;AAAK,QAAA,SAAS,EAAER,OAAO,CAACX,SAAxB;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAGIY,QAAQ,CAACQ,GAAT,CAAaC,IAAI,iBACf,QAAC,QAAD;AACE,UAAA,QAAQ,EAAEP,EADZ;AAEE,UAAA,IAAI,EAAEO,IAAI,CAACA,IAFb;AAGE,UAAA,IAAI,EAAEA,IAAI,CAACC,IAHb;AAIE,UAAA,EAAE,EAAED,IAAI,CAACP;AAJX,WAKOO,IAAI,CAACP,EALZ;AAAA;AAAA;AAAA;AAAA,gBADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7BD;;GAAMJ,c;UACYX,S,EACCL,W,EACHA,W,EACCE,S;;;KAJXc,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { styles } from './WelcomeScreen';\nimport InputTask from '../Atoms/InputTask';\nimport TodoItem from '../Atoms/TodoItem';\nimport { useSelector } from 'react-redux'\nimport { selectTodoList } from '../../features/todoSlice';\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '../../assets/paper-texture.jpg';\n\nconst useStyles = makeStyles({\n  container: {\n    backgroundImage: `url(${Paper})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    flex: \"1\"\n  },\n});\n\nconst TODOlistScreen = () => {\n  const classes = useStyles();\n  const todoList = useSelector(selectTodoList);\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  console.log(state);\n\n  return (\n    <div style={styles}>\n      <div style={{ height: \"700px\", width: \"500px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", backgroundColor: \"white\", padding: \"20px\" }} className=\"list__container\">\n        <div className={classes.container}>\n          <InputTask />\n          {\n            todoList.map(item => (\n              <TodoItem\n                activeId={id}\n                name={item.item}\n                done={item.done}\n                id={item.id}\n                key={item.id}\n              />\n            ))\n          }\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TODOlistScreen\n"]},"metadata":{},"sourceType":"module"}