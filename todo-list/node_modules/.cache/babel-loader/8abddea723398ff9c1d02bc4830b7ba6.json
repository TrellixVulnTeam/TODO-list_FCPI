{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // const initialState = {\n//   todoList: [\n//     { id: 1, name: \"task1\", done: false },\n//     { id: 2, name: \"task2\", done: false },\n//     { id: 3, name: \"task3\", done: true },\n//   ]\n// }\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: [{\n    id: 1,\n    name: \"task1\",\n    done: false\n  }, {\n    id: 2,\n    name: \"task2\",\n    done: false\n  }, {\n    id: 3,\n    name: \"task3\",\n    done: true\n  }],\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask);\n    },\n    toggleCheck: (state, action) => {\n      const index = state.findIndex();\n    }\n  }\n});\nexport const {\n  saveTask,\n  setCheck\n} = tasksSlice.actions;\nexport const selectTaskList = state => state.tasks.todoList;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/tasksSlice.js"],"names":["createSlice","tasksSlice","name","initialState","id","done","reducers","saveTask","state","action","newTask","Date","now","payload","push","toggleCheck","index","findIndex","setCheck","actions","selectTaskList","tasks","todoList","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGD,WAAW,CAAC;AAC7BE,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAC,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GADW,EAEX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GAFW,EAGX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASF,IAAAA,IAAI,EAAE,OAAf;AAAwBG,IAAAA,IAAI,EAAE;AAA9B,GAHW,CAFgB;AAO7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAG;AACdN,QAAAA,EAAE,EAAEO,IAAI,CAACC,GAAL,EADU;AAEdV,QAAAA,IAAI,EAAEO,MAAM,CAACI,OAAP,CAAeX,IAFP;AAGdG,QAAAA,IAAI,EAAE;AAHQ,OAAhB;AAKAG,MAAAA,KAAK,CAACM,IAAN,CAAWJ,OAAX;AACD,KARO;AAURK,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMO,KAAK,GAAGR,KAAK,CAACS,SAAN,EAAd;AACD;AAZO;AAPmB,CAAD,CAA9B;AAuBA,OAAO,MAAM;AAAEV,EAAAA,QAAF;AAAYW,EAAAA;AAAZ,IAAyBjB,UAAU,CAACkB,OAA1C;AACP,OAAO,MAAMC,cAAc,GAAGZ,KAAK,IAAIA,KAAK,CAACa,KAAN,CAAYC,QAA5C;AACP,eAAerB,UAAU,CAACsB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n// const initialState = {\n//   todoList: [\n//     { id: 1, name: \"task1\", done: false },\n//     { id: 2, name: \"task2\", done: false },\n//     { id: 3, name: \"task3\", done: true },\n//   ]\n// }\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState:[\n    { id: 1, name: \"task1\", done: false },\n    { id: 2, name: \"task2\", done: false },\n    { id: 3, name: \"task3\", done: true },\n  ],\n  reducers: {\n    saveTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        name: action.payload.name,\n        done: false\n      };\n      state.push(newTask)\n    },\n\n    toggleCheck: (state, action) => {\n      const index = state.findIndex()\n    }\n  },\n});\n\nexport const { saveTask, setCheck } = tasksSlice.actions;\nexport const selectTaskList = state => state.tasks.todoList\nexport default tasksSlice.reducer"]},"metadata":{},"sourceType":"module"}