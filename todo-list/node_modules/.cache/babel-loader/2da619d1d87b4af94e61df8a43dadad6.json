{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todoList: []\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    saveTodo: (state, action) => {\n      state.todoList.push(action.payload);\n      return state;\n    },\n    setCheck: (state, action) => {\n      return;\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    }\n  }\n});\nexport const {\n  saveTodo,\n  removeTodos\n} = todoSlice.actions;\nexport const selectTodoList = state => state.todos.todoList;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/todoSlice.js"],"names":["createSlice","initialState","todoList","todoSlice","name","reducers","saveTodo","state","action","push","payload","setCheck","removeTodos","filter","item","id","actions","selectTodoList","todos","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAGA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,OADsB;AAE5BH,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACA,aAAOH,KAAP;AACD,KAJO;AAKRI,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3B;AACD,KAPO;AAQRI,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAxC,CAAP;AACD;AAVO;AAHkB,CAAD,CAA7B;AAmBA,OAAO,MAAM;AAAEJ,EAAAA,QAAF;AAAYM,EAAAA;AAAZ,IAA4BT,SAAS,CAACa,OAA5C;AACP,OAAO,MAAMC,cAAc,GAAGV,KAAK,IAAIA,KAAK,CAACW,KAAN,CAAYhB,QAA5C;AACP,eAAeC,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  todoList: []\n}\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    saveTodo: (state, action) => {\n      state.todoList.push(action.payload);\n      return state;\n    },\n    setCheck: (state, action) => {\n      return\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    },\n\n\n  }\n});\n\nexport const { saveTodo, removeTodos } = todoSlice.actions;\nexport const selectTodoList = state => state.todos.todoList\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}