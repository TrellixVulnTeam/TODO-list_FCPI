{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/pages/TODOlistScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { styles } from './WelcomeScreen';\nimport InputTask from '../Atoms/InputTask';\nimport TodoItem from '../Atoms/TodoItem';\nimport { useSelector } from 'react-redux';\nimport { selectTodoList } from '../../features/todoSlice';\nimport { useParams } from 'react-router';\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport Paper from '../../assets/paper-texture.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Special Elite', cursive\";\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: \"15px\",\n    backgroundImage: `url(${Paper})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    flex: \"1\"\n  },\n  h1: {\n    fontFamily: font,\n    fontSize: \"2em\"\n  },\n  box: {\n    textAlign: \"center\",\n    height: \"700px\",\n    width: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\"\n  }\n});\n\nconst TODOlistScreen = () => {\n  _s();\n\n  const classes = useStyles();\n  const todoList = useSelector(selectTodoList);\n  const state = useSelector(state => state);\n  const {\n    id\n  } = useParams();\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"div\",\n    style: styles,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"div\",\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"div\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          className: classes.h1,\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), todoList.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n          activeId: id,\n          name: item.item,\n          done: item.done,\n          id: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TODOlistScreen, \"8BmnPziSvWIZ4c1jXnq6e4AnzsY=\", false, function () {\n  return [useStyles, useSelector, useSelector, useParams];\n});\n\n_c = TODOlistScreen;\nexport default TODOlistScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TODOlistScreen\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/pages/TODOlistScreen.js"],"names":["React","styles","InputTask","TodoItem","useSelector","selectTodoList","useParams","makeStyles","Box","Typography","Paper","font","useStyles","container","paddingTop","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","display","flexDirection","alignItems","width","flex","h1","fontFamily","fontSize","box","textAlign","height","backgroundColor","TODOlistScreen","classes","todoList","state","id","console","log","map","item","done"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styles } from './WelcomeScreen';\nimport InputTask from '../Atoms/InputTask';\nimport TodoItem from '../Atoms/TodoItem';\nimport { useSelector } from 'react-redux'\nimport { selectTodoList } from '../../features/todoSlice';\nimport { useParams } from 'react-router';\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport Paper from '../../assets/paper-texture.jpg';\nconst font = \"'Special Elite', cursive\";\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: \"15px\",\n    backgroundImage: `url(${Paper})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    flex: \"1\",\n  },\n  h1: {\n    fontFamily: font,\n    fontSize: \"2em\"\n  },\n  box: {\n    textAlign: \"center\",\n    height: \"700px\",\n    width: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\"\n  }\n});\n\nconst TODOlistScreen = () => {\n  const classes = useStyles();\n  const todoList = useSelector(selectTodoList);\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  console.log(state);\n\n  return (\n    <Box component=\"div\" style={styles}>\n      <Box component=\"div\" className={classes.box}>\n        <Box component=\"div\" className={classes.container}>\n          <Typography component=\"h1\" className={classes.h1}>List</Typography>\n          <InputTask />\n          {\n            todoList.map(item => (\n              <TodoItem\n                activeId={id}\n                name={item.item}\n                done={item.done}\n                id={item.id}\n                key={item.id}\n              />\n            ))\n          }\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default TODOlistScreen\n"]},"metadata":{},"sourceType":"module"}