{"ast":null,"code":"var _jsxFileName = \"/home/jagoda/TODO-list/todo-list/src/components/Atoms/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, makeStyles, Typography, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setCheck, removeTodos, editTodo } from '../../features/todoSlice';\nimport { Link, useHistory } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Special Elite', cursive\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\",\n    backgroundColor: \"transparent\",\n    margin: \"6px 4px\",\n    height: \"40px\",\n    borderRadius: \"12px\",\n    textAlign: \"center\",\n    paddingTop: \"3em\"\n  },\n  p: props => ({\n    textDecoration: props.done ? 'line-through' : 'none',\n    fontFamily: font,\n    textTransform: \"uppercase\",\n    fontSize: \"1.2em\",\n    padding: \"5px\"\n  }),\n  input: {\n    fontFamily: font,\n    textAlign: \"center\",\n    color: \"red\"\n  }\n});\n\nconst TodoItem = props => {\n  _s();\n\n  const {\n    name,\n    done,\n    id,\n    activeId\n  } = props;\n  const classes = useStyles({\n    done\n  });\n  const {\n    push\n  } = useHistory();\n  const [newName, setNewName] = useState(name);\n  const dispatch = useDispatch();\n\n  const removeTodo = () => {\n    dispatch(removeTodos(id));\n  };\n\n  const handleCheck = () => {\n    dispatch(setCheck(id));\n  };\n\n  const onChange = e => {\n    const {\n      target\n    } = e;\n    const {\n      value\n    } = target;\n    setNewName(value);\n  };\n\n  const onKeyPress = e => {\n    const {\n      which\n    } = e;\n\n    if (which === 13) {\n      dispatch(editTodo({\n        id,\n        newName\n      }));\n      push('/list');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: done,\n        color: \"primary\",\n        onChange: handleCheck,\n        inputProps: {\n          'aria-label': \"secondary checkbox\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), parseInt(activeId) !== parseInt(id) && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        className: classes.p,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), parseInt(activeId) === parseInt(id) && /*#__PURE__*/_jsxDEV(Input, {\n        className: classes.input,\n        name: \"name\",\n        value: newName,\n        onChange: onChange,\n        onKeyPress: onKeyPress,\n        style: {\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/list/${id}/edit`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: () => removeTodo(),\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"wkKYUt0jvkKF3eFcPuHxxXJUvq8=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/components/Atoms/TodoItem.js"],"names":["Box","Button","Checkbox","makeStyles","Typography","Input","React","useState","useDispatch","setCheck","removeTodos","editTodo","Link","useHistory","EditIcon","DeleteIcon","font","useStyles","container","display","alignItems","justifyContent","width","backgroundColor","margin","height","borderRadius","textAlign","paddingTop","p","props","textDecoration","done","fontFamily","textTransform","fontSize","padding","input","color","TodoItem","name","id","activeId","classes","push","newName","setNewName","dispatch","removeTodo","handleCheck","onChange","e","target","value","onKeyPress","which","parseInt"],"mappings":"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","sourcesContent":["import { Box, Button, Checkbox, makeStyles, Typography, Input } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { setCheck, removeTodos, editTodo } from '../../features/todoSlice';\nimport { Link, useHistory } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst font = \"'Special Elite', cursive\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\",\n    backgroundColor: \"transparent\",\n    margin: \"6px 4px\",\n    height: \"40px\",\n    borderRadius: \"12px\",\n    textAlign: \"center\",\n    paddingTop: \"3em\"\n  },\n  p: props => ({\n    textDecoration: props.done ? 'line-through' : 'none',\n    fontFamily: font,\n    textTransform: \"uppercase\",\n    fontSize: \"1.2em\",\n    padding: \"5px\"\n  }),\n  input: {\n    fontFamily: font,\n    textAlign: \"center\",\n    color: \"red\"\n  }\n});\n\nconst TodoItem = (props) => {\n  const { name, done, id, activeId } = props;\n  const classes = useStyles({ done });\n  const { push } = useHistory();\n  const [newName, setNewName] = useState(name);\n  const dispatch = useDispatch()\n  const removeTodo = () => {\n    dispatch(removeTodos(id))\n  }\n  const handleCheck = () => {\n    dispatch(setCheck(id))\n  }\n\n  const onChange = e => {\n    const { target } = e;\n    const { value } = target;\n\n    setNewName(value);\n  }\n\n  const onKeyPress = e => {\n    const { which } = e;\n\n    if (which === 13) {\n      dispatch(editTodo({ id, newName }));\n      push('/list');\n    }\n  }\n\n  return (\n    <Box className={classes.container}>\n      <Box>\n        <Checkbox\n          checked={done}\n          color=\"primary\"\n          onChange={handleCheck}\n          inputProps={{ 'aria-label': \"secondary checkbox\" }}\n        />\n\n        {parseInt(activeId) !== parseInt(id) &&\n          <Typography variant=\"p\"\n            className={classes.p}\n          >{name}</Typography>\n        }\n\n        {parseInt(activeId) === parseInt(id) &&\n          <Input\n            className={classes.input}\n            name='name'\n            value={newName}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n            style={{color: \"red\"}}\n          />\n        }\n      </Box>\n      <Box>\n        <Link to={`/list/${id}/edit`}>\n          <Button color=\"primary\"><EditIcon /></Button>\n        </Link>\n        <Button color=\"secondary\" onClick={() => removeTodo()}><DeleteIcon /></Button>\n      </Box>\n    </Box>\n  )\n}\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}