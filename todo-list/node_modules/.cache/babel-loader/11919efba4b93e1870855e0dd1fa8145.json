{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nexport const todoAdapter = createEntityAdapter();\nexport const todoSelectors = todoAdapter.getSelectors(state => state.todos);\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: todoAdapter.getInitialState(),\n  reducers: {\n    addTodo: todoAdapter.addOne,\n    addTodos: todoAdapter.addMany //   toggleCheck: (state, action) => {\n    //     const index = state.findIndex(\n    //       (task) => task.id === action.payload.id\n    //     );\n    //     state[index].done = action.payload.done;\n    //   }\n    // },\n    // deleteTask: (state, action) => {\n    //    return state.filter(\n    //      (task) => task.id !== action.payload.id);\n    // },\n    // editTask: (state, action) => {\n    //  return state.task.name[action.payload.name]\n\n  }\n});\nexport const {\n  addTodo,\n  toggleCheck,\n  deleteTask,\n  editTask\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/home/jagoda/TODO-list/todo-list/src/features/todoSlice.js"],"names":["createSlice","createEntityAdapter","todoAdapter","todoSelectors","getSelectors","state","todos","todoSlice","name","initialState","getInitialState","reducers","addTodo","addOne","addTodos","addMany","toggleCheck","deleteTask","editTask","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,mBAAtB,QAAiD,kBAAjD;AAEA,OAAO,MAAMC,WAAW,GAAGD,mBAAmB,EAAvC;AACP,OAAO,MAAME,aAAa,GAAGD,WAAW,CAACE,YAAZ,CAA0BC,KAAD,IAAWA,KAAK,CAACC,KAA1C,CAAtB;AAEP,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAEP,WAAW,CAACQ,eAAZ,EAFc;AAI5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEV,WAAW,CAACW,MADb;AAERC,IAAAA,QAAQ,EAAEZ,WAAW,CAACa,OAFd,CAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfU;AAJkB,CAAD,CAA7B;AAuBA,OAAO,MAAM;AAAEH,EAAAA,OAAF;AAAWI,EAAAA,WAAX;AAAwBC,EAAAA,UAAxB;AAAoCC,EAAAA;AAApC,IAAiDX,SAAS,CAACY,OAAjE;AACP,eAAeZ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit'\n\nexport const todoAdapter = createEntityAdapter();\nexport const todoSelectors = todoAdapter.getSelectors((state) => state.todos)\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: todoAdapter.getInitialState(),\n\n  reducers: {\n    addTodo: todoAdapter.addOne,\n    addTodos: todoAdapter.addMany,\n  //   toggleCheck: (state, action) => {\n  //     const index = state.findIndex(\n  //       (task) => task.id === action.payload.id\n  //     );\n  //     state[index].done = action.payload.done;\n  //   }\n  // },\n  // deleteTask: (state, action) => {\n  //    return state.filter(\n  //      (task) => task.id !== action.payload.id);\n  // },\n  // editTask: (state, action) => {\n  //  return state.task.name[action.payload.name]\n  }\n});\n\nexport const { addTodo, toggleCheck, deleteTask, editTask } = todoSlice.actions;\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}